@model PostEditViewModel

@{
    ViewData["Title"] = "文章编辑";
    var categoryList = ViewBag.CategoryList;
    var postTypeList = Enum.GetValues(typeof(ConstantsEnum.PostType)).Cast<ConstantsEnum.PostType>().ToList();
}

<div class="card">
    <div class="card-header" style="background-color: #fdf0f0">
        文章编辑
    </div>
    <div class="col-xs-12 col-md-12">
        <form asp-controller="Post" asp-action="Edit" method="post">
            <div class="row align-items-center mt-20">
                <div class="col-auto">
                    <label for="title" class="col-form-label">标题</label>
                </div>
                <div class="col-auto">
                    <input type="text" asp-for="Title" class="form-control wd-400">
                </div>
            </div>
            <div class="row align-items-center mt-20">
                <div class="col-auto">
                    <label for="category" class="col-form-label">分类</label>
                </div>
                <div class="col-auto">
                    <select class="form-select form-control wd-400" id="post_category">
                        <option selected value="">请选择分类</option>
                        @foreach (var item in categoryList)
                        {
                            if (Model.CategoryId == item.CategoryId)
                            {
                                <option value="@item.CategoryId" selected>@item.CategoryName</option>
                            }
                            <option value="@item.CategoryId">@item.CategoryName</option>
                        }
                    </select>
                </div>
            </div>
            <div class="row mt-20">
                <label for="content" class="col-form-label ml-15">内容</label>
                <div id="post_editormd" class="ml-30 ">
                    <textarea asp-for="ContentMarkDown" style="display: none;">@Html.Raw(Model.ContentMarkDown)</textarea>
                </div>
            </div>
            <div class="row align-items-center mt-20">
                <div class="col-auto">
                    <label for="title" class="col-form-label">类型</label>
                </div>
                <div class="col-auto">
                    @foreach (var item in postTypeList)
                    {
                        <div class="form-check form-check-inline">
                            @if (item == ConstantsEnum.PostType.原创)
                            {
                                <input checked class="form-check-input" type="radio" asp-for="PostTypeId" value="@(((int)item).ToString())">
                            }
                            else
                            {
                                <input class="form-check-input" type="radio" asp-for="PostTypeId" value="@(((int)item).ToString())">
                            }
                            <label class="form-check-label" for="PostTypeId" value="@(((int)item).ToString())">@item.ToString()</label>
                        </div>
                    }
                </div>
            </div>
            <div class="row align-items-center mt-20">
                <div class="col-auto">
                    <label for="tags" class="col-form-label">标签</label>
                </div>
                <div class="col-auto">
                    <input class="form-control wd-400" asp-for="TagString" value="@Model.TagString" />
                </div>
                <div>
                    <span class="col-xs-6 help-block">添加相关标签，用空格分隔</span>
                </div>
            </div>

            <input asp-for="PostId" type="hidden" />
            <input asp-for="Content" type="hidden" />

            <div class="form-group mt-20">
                <div class="text-center">
                    <button type="button" class="btn-edit" onclick="btnSave()">提交</button>
                </div>
            </div>
        </form>
    </div>
</div>

<script>
    $(function () {
        postEditor = editormd("post_editormd", {
            width: "86%",
            height: 640,
            syncScrolling: "single",
            path: "/lib/MarkDown/lib/",
            saveHTMLToTextarea: true,
            emoji: false
        });
        $("#TagString").tagsInput({
            //'autocomplete_url': url_to_autocomplete_api, //自动完成插件的文件地址，demo里有说明
            //'autocomplete': { option: value, option: value }, //自动完成插件的参数，demo有说明。（提供个jquery.autocomplete的：http://bassistance.de/jquery-plugins/jquery-plugin-autocomplete/）
            'height': '48px', //设置高度
            'width': '400px',  //设置宽度
            'interactive': true, //是否允许添加标签，false为阻止
            'defaultText': '添加标签', //默认文字
            //'onAddTag': function () { console.log($("#TagString").val()) }, //增加标签的回调函数
            //'onRemoveTag': function () { console.log($("#TagString").val()) }, //删除标签的回调函数
            //'onChange': function () { console.log($("#TagString").val()) }, //改变一个标签时的回调函数
            'removeWithBackspace': true, //是否允许使用退格键删除前面的标签，false为阻止
            'minChars': 0, //每个标签的小最字符
            'maxChars': 0, //每个标签的最大字符，如果不设置或者为0，就是无限大
            'placeholderColor': '#666666' //设置defaultText的颜色
        });

    });
    function btnSave() {
        $("#Content").val(postEditor.getHTML());
        $.ajax({
            url: "/Post/Edit",
            type: "Post",
            dataType: "json",
            data: { PostId: $("#PostId").val(), Title: $("#Title").val(), ContentMarkDown: $("#ContentMarkDown").val(), Content: $("#Content").val(), CategoryId: $("#post_category").val(), PostTypeId: $('input:radio:checked').val(), TagString: $("#TagString").val() },
            success: function (res) {
                if (res.success) {
                    layer.msg(res.message, { icon: 1, time: 1000 });
                    location.href = "http://localhost:64989/Home/Index";
                }
                else {
                    layer.msg(res.message, { icon: 2, time: 1000 });
                }
            }
        });
    }
</script>

